package rea.events;

import rea.components.Character;

/**
 * <p>An event that delivers a message to a player.
 * The message can be delivered by a character or by the game itself.
 * In the later case, the speaker is <code>null</code>.</p>
 */
public class MessageUpdateEvent
        implements UpdateEvent {

    private String message;
    private Character speaker;

    /**
     * Create a message update event with a message.
     * @param message to deliver
     */
    public MessageUpdateEvent(String message) {
        this.message = message;
        this.speaker = null;
    }

    /**
     * Create a message update event with a message and a speaker.
     * @param speaker the character delivering the message
     * @param message to deliver
     */
    public MessageUpdateEvent(Character speaker,
                              String message) {
        this.message = message;
        this.speaker = speaker;
    }

    /**
     * The message to deliver
     * @return the message
     */
    public String getMessage() {
        return this.message;
    }

    /**
     * The character that uttered the message.
     * If the message was generated by the game itself, the speaker is <code>null</code>.
     * @return the speaker
     */
    public Character getSpeaker() {
        return this.speaker;
    }
}
